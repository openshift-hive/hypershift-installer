apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: konnectivity-agent
  namespace: kube-system
  name: konnectivity-agent
spec:
  selector:
    matchLabels:
      k8s-app: konnectivity-agent
  template:
    metadata:
      labels:
        k8s-app: konnectivity-agent
    spec:
      priorityClassName: system-cluster-critical
      tolerations:
      - key: "CriticalAddonsOnly"
        operator: "Exists"
      containers:
      - image: us.gcr.io/k8s-artifacts-prod/kas-network-proxy/proxy-agent:v0.0.8
        name: konnectivity-agent
        command: ["/proxy-agent"]
        args: [
                "--logtostderr=true",
                "--ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                "--proxy-server-host={{ .KonnectivityServerAddress }}",
                "--proxy-server-port=8091",
                "--service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token"
                ]
        volumeMounts:
        - mountPath: /var/run/secrets/tokens
          name: konnectivity-agent-token
        livenessProbe:
          httpGet:
            port: 8093
            path: /healthz
          initialDelaySeconds: 15
          timeoutSeconds: 15
      serviceAccountName: konnectivity-agent
      volumes:
      - name: konnectivity-agent-token
        projected:
          sources:
          - serviceAccountToken:
              path: konnectivity-agent-token
              audience: system:konnectivity-server
