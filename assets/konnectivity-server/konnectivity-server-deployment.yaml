apiVersion: apps/v1
kind: Deployment
metadata:
  name: konnectivity-server
  labels:
    app: konnectivity-server
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 1
  selector:
    matchLabels:
      app: konnectivity-server
  template:
    metadata:
      labels:
        app: konnectivity-server
    spec:
      containers:
      - name: konnectivity-server
        image: us.gcr.io/k8s-artifacts-prod/kas-network-proxy/proxy-server:v0.0.12
        command: ["/proxy-server"]
        args: [
                "--logtostderr=true",
                "--log-file-max-size=0",
                "--cluster-cert=/etc/konnectivity-server/pki/server.crt",
                "--cluster-key=/etc/konnectivity-server/pki/server.key",
                "--server-cert=/etc/konnectivity-server/pki/local-server.crt",
                "--server-key=/etc/konnectivity-server/pki/local-server.key",
                "--server-ca-cert=/etc/konnectivity-server/config/ca.crt",
                "--mode=grpc",
                "--server-port=8090",
                "--agent-port=8091",
                "--health-port=8092",
                "--admin-port=8093",
                "--agent-namespace=kube-system",
                "--agent-service-account=konnectivity-agent",
                "--kubeconfig=/etc/konnectivity-server/kubeconfig/kubeconfig",
                "--authentication-audience=system:konnectivity-server"
                ]
        livenessProbe:
          httpGet:
            scheme: HTTP
            port: 8092
            path: /healthz
          initialDelaySeconds: 30
          timeoutSeconds: 60
        ports:
        - name: server
          containerPort: 8090
        - name: agent
          containerPort: 8091
        - name: health
          containerPort: 8092
        - name: admin
          containerPort: 8093
        volumeMounts:
        - name: konnectivity-server
          mountPath: /etc/konnectivity-server/pki/
          readOnly: true
        - name: konnectivity-server-config
          mountPath: /etc/konnectivity-server/config
          readOnly: true
        - name: kubeconfig
          mountPath: /etc/konnectivity-server/kubeconfig
          readOnly: true
      volumes:
      - name: konnectivity-server
        secret:
          secretName: konnectivity-server
      - name: konnectivity-server-config
        configMap:
          name: konnectivity-server
      - name: kubeconfig
        secret:
          secretName: service-network-admin-kubeconfig
